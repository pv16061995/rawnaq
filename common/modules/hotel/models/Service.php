<?php

namespace common\modules\hotel\models;

use yeesoft\behaviors\MultilingualBehavior;
use yeesoft\models\OwnerAccess;
use yeesoft\models\User;
use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\SluggableBehavior;
use yii\behaviors\TimestampBehavior;
use yeesoft\db\ActiveRecord;

/**
 * This is the model class for table "hotel_service".
 *
 * @property integer $id
 * @property string $slug
 * @property string $service_type
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property User $updatedBy
 * @property User $createdBy
 * @property HotelServiceLang[] $hotelServiceLangs
 * @property Hotell[] $hotels
 */
class Service extends ActiveRecord implements OwnerAccess
{

    const SCENARIO_AUTOGENERATED = 'autoService';
    const SERVICE_TYPE = array(
        'ESSENTIALS'=> [
            'NAME' => 'Essentials',
            'USE' => 'HOTEL'
        ],
        'AMENITIES'=> [
            'NAME' => 'Amenities',
            'USE' => 'HOTEL'
        ],
        'CONVENIENCES'=> [
            'NAME' => 'Conveniences',
            'USE' => 'HOTEL'
        ],
        'FEATURES'=> [
            'NAME' => 'Features',
            'USE' => 'ROOM'
        ],
        'BEDTYPE'=> [
            'NAME' => 'Bed Type',
            'USE' => 'ROOM'
        ],
        'BATHROOM&TOILETRIES'=> [
            'NAME' => 'Bathroom & Toiletries',
            'USE' => 'ROOM'
        ],
        'ENTERTAINMENT'=> [
            'NAME' => 'Entertainment',
            'USE' => 'ROOM'
        ],
        'COMFORTS'=> [
            'NAME' => 'Comforts',
            'USE' => 'ROOM'
        ],
    );

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%hotel_service}}';
    }
    
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            BlameableBehavior::className(),
            TimestampBehavior::className(),
            'sluggable' => [
                'class' => SluggableBehavior::className(),
                'attribute' => 'title',
            ],
            'multilingual' => [
                'class' => MultilingualBehavior::className(),
                'langForeignKey' => 'hotel_service_id',
                'tableName' => "{{%hotel_service_lang}}",
                'attributes' => [
                    'title'
                ]
            ],
        ];
    }
    
    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        $scenarios = parent::scenarios();
        $scenarios[self::SCENARIO_AUTOGENERATED] = ['title', 'slug'];
        return $scenarios;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required', 'on' => self::SCENARIO_DEFAULT],
            [['created_at', 'updated_at', 'created_by', 'updated_by'], 'integer'],
            [['slug', 'title', 'service_type'], 'string', 'max' => 200],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['updated_by' => 'id']],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['created_by' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('yee', 'ID'),
            'slug' => Yii::t('yee', 'Slug'),
            'title' => Yii::t('yee', 'Service Name'),
            'service_type' => Yii::t('yee', 'Service Type'),
            'created_by' => Yii::t('yee', 'Created By'),
            'updated_by' => Yii::t('yee', 'Updated By'),
            'created_at' => Yii::t('yee', 'Created'),
            'updated_at' => Yii::t('yee', 'Updated'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(User::className(), ['id' => 'updated_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(User::className(), ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHotelServiceLangs()
    {
        return $this->hasMany(HotelServiceLang::className(), ['hotel_service_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHotels()
    {
        return $this->hasMany(Hotel::className(), ['id' => 'hotel_id'])
            ->viaTable('{{%hotel_service_hotel}}', ['service_id' => 'id']);
    }
    
    /**
     * @inheritdoc
     */
    public static function getServices()
    {
        $result = [];
        $services = static::find()->all();
        foreach ($services as $service) {
            $result[] = ['id' => $service->id, 'name' => $service->title, 'used'=>self::SERVICE_TYPE[$service->service_type]];
        }
        
        return $result;
        
    }

    /**
     * @inheritdoc
     */
    public static function getServicesForDropBox()
    {
        $result = [];
        $services = static::find()->all();
        foreach ($services as $service) {
            $result[$service->service_type][$service->id] = $service->title;
        }

        return $result;

    }

    /**
     * @inheritdoc
     */
    public static function getServiceType()
    {
        $result = [];
        foreach (self::SERVICE_TYPE as $key=>$service) {
            $result[] = ['id' => $key, 'text' => $service['NAME'], 'used'=>$service['USE']];
        }
        return $result;
    }

    public static function find()
    {
        return new ServiceQuery(get_called_class());
    }

    /**
     *
     * @inheritdoc
     */
    public static function getFullAccessPermission()
    {
        return 'fullHotelServiceAccess';
    }

    /**
     *
     * @inheritdoc
     */
    public static function getOwnerField()
    {
        return 'created_by';
    }
}