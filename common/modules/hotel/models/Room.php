<?php

namespace common\modules\hotel\models;

use paulzi\nestedintervals\NestedIntervalsBehavior;
use yeesoft\behaviors\MultilingualBehavior;
use yeesoft\models\OwnerAccess;
use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\SluggableBehavior;
use yii\behaviors\TimestampBehavior;
use yeesoft\db\ActiveRecord;

/**
 * This is the model class for table "hotel_room".
 *
 * @property integer $id
 * @property string $slug
 * @property string $thumbnail
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 */
class Room extends ActiveRecord implements OwnerAccess
{
    const SCENARIO_AUTOGENERATED = 'autoService';
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%hotel_room}}';
    }

    /**
     * @inheritdoc
     */
    public function init()
    {
        parent::init();
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required', 'on' => self::SCENARIO_DEFAULT],
            [['created_by', 'updated_by', 'created_at', 'updated_at'], 'integer'],
            [['thumbnail','content','title'], 'string'],
            [['slug', 'title', 'thumbnail'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            BlameableBehavior::className(),
            TimestampBehavior::className(),
            'sluggable' => [
                'class' => SluggableBehavior::className(),
                'attribute' => 'title',
            ],
            'multilingual' => [
                'class' => MultilingualBehavior::className(),
                'langForeignKey' => 'hotel_room_id',
                'tableName' => "{{%hotel_room_lang}}",
                'attributes' => [
                    'title', 'content'
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        $scenarios = parent::scenarios();
        $scenarios[self::SCENARIO_AUTOGENERATED] = ['title', 'slug'];
        return $scenarios;
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('yee', 'ID'),
            'slug' => Yii::t('yee', 'Slug'),
            'thumbnail' => Yii::t('yee', 'Thumbnail'),
            'title' => Yii::t('yee', 'Room Name'),
            'content' => Yii::t('yee', 'Content'),
            'created_by' => Yii::t('yee', 'Created By'),
            'updated_by' => Yii::t('yee', 'Updated By'),
            'created_at' => Yii::t('yee', 'Created'),
            'updated_at' => Yii::t('yee', 'Updated'),
        ];
    }

    public function getShortContent($delimiter = '<!-- pagebreak -->', $allowableTags = '<a>')
    {
        $content = explode($delimiter, $this->content);
        return strip_tags($content[0], $allowableTags);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHotels()
    {
        return $this->hasMany(Hotel::className(), ['id' => 'hotel_id'])
            ->viaTable('{{%hotel_room_hotel}}', ['room_id' => 'id']);
    }
    
    public function getRoom(){
        return $this->hasOne(HotelRooms::className(), ['room_id' => 'id']);
    }

    /**
     * Return all Rooms.
     *
     * @param bool $asArray
     *
     * @return static[]
     */
    public static function getRooms($skipRooms = [])
    {
        $result = [];
        $rooms = Room::findOne(1)->getDescendants()->joinWith('translations')->all();

        foreach ($rooms as $room) {
            if (!in_array($room->id, $skipRooms)) {
                $result[$room->id] = $room->title;
            }
        }

        return $result;
    }


    public static function find()
    {
        return new RoomQuery(get_called_class());

    }

    /**
     *
     * @inheritdoc
     */
    public static function getFullAccessPermission()
    {
        return 'fullHotelRoomAccess';
    }

    /**
     *
     * @inheritdoc
     */
    public static function getOwnerField()
    {
        return 'created_by';
    }

    public function getHotelRooms()
    {
        return $this->hasMany(HotelRooms::className(), ['room_id' => 'id']);
    }

    public function getHotelRoomService()
    {
        return $this->hasMany(HotelRoomServices::className(), ['room_id' => 'id']);
        
        return $this->hasMany(Service::className(), ['id' => 'service_id'])
                ->viaTable('{{%hotel_service_hotel}}', ['hotel_id' => 'id']);
    }
    
    public function getHotelRoomGalleries()
    {
        return $this->hasMany(HotelRoomGalleries::className(), ['hotel_room_id' => 'id']);
        
    }
}